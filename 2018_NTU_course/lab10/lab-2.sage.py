
# This file was *autogenerated* from the file lab-2.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_5 = Integer(5); _sage_const_256 = Integer(256); _sage_const_1000 = Integer(1000); _sage_const_20 = Integer(20)
import time
import json
from Crypto.Util.number import *

load("coppersmith.sage")

N,e,C = json.load(open('data','r'))
prefix = b"Let me sleep, just let me sleep. Maybe go to sleep. I want to go to sleep. When can I go to sleep."
prefix_n = bytes_to_long(prefix)
for suffix_len in range(_sage_const_5 ,_sage_const_1000 ):
    m = prefix_n * pow(_sage_const_256 ,suffix_len,N)
    ZmodN = Zmod(N)
    P = PolynomialRing(ZmodN, names=('x',)); (x,) = P._first_ngens(1)
    f = (m + x)**e - C
    dd = f.degree()
    beta = _sage_const_1 
    epsilon = beta / _sage_const_20 
    mm = ceil(beta**_sage_const_2  / (dd * epsilon))
    tt = floor(dd * mm * ((_sage_const_1 /beta) - _sage_const_1 ))
    XX = ceil(N**((beta**_sage_const_2 /dd) - epsilon))
    roots = coppersmith_howgrave_univariate(f, N, beta, mm, tt, XX)
    for r in roots:
        print(long_to_bytes(r))

